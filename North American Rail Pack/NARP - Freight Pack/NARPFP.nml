grf{
    grfid: "ZM\11\02";
    name: string(STR_GRF_NAME);
    desc: string(STR_GRF_DESCRIPTION);
    version: 1;
    min_compatible_version: 1;
//Purchase Cost Parameter
    param {
        param_purchase_cost {
            type: int;
            name: string(STR_PARAM_PURCHASE_COST);
            desc: string(STR_PARAM_PURCHASE_COST_DESC);
            min_value: 0;
            max_value: 8;
            def_value: 4;
            names: {
                        0: string(STR_PARAM_DIVIDE_16);
                        1: string(STR_PARAM_DIVIDE_8);
                        2: string(STR_PARAM_DIVIDE_4);
                        3: string(STR_PARAM_DIVIDE_2);
                        4: string(STR_PARAM_NORMAL);
                        5: string(STR_PARAM_TIMES_2);
                        6: string(STR_PARAM_TIMES_4);
                        7: string(STR_PARAM_TIMES_8);
                        8: string(STR_PARAM_TIMES_16);
            };
        }
    }
//Running Cost Parameter
     param {
        param_running_cost {
            type: int;
            name: string(STR_PARAM_RUNNING_COST);
            desc: string(STR_PARAM_RUNNING_COST_DESC);
            min_value: 0;
            max_value: 8;
            def_value: 4;
            names: {
                        0: string(STR_PARAM_DIVIDE_16);
                        1: string(STR_PARAM_DIVIDE_8);
                        2: string(STR_PARAM_DIVIDE_4);
                        3: string(STR_PARAM_DIVIDE_2);
                        4: string(STR_PARAM_NORMAL);
                        5: string(STR_PARAM_TIMES_2);
                        6: string(STR_PARAM_TIMES_4);
                        7: string(STR_PARAM_TIMES_8);
                        8: string(STR_PARAM_TIMES_16);
            };
        }
}

//Carry Capacity Parameter
    param {
                param_freight_capacities {
                        type: int;
                        name: string(STR_PARAM_NAME_FREIGHT_CAPACITY);
                        desc: string(STR_PARAM_DESC_CAPACITY);
                        min_value: 0;
                        max_value: 1;
                        def_value: 0;
                        names: {
                                                0: string(STR_PARAM_REAL_CAPACITY);
                                                1: string(STR_PARAM_NORMAL_REDUCED);
                        };
                }
        }

//RealDisable
	param {
    param_RealDisable {
     name: string(STR_PARAM_NAME_REALDISABLE);
     desc: string(STR_PARAM_DESC_REALDISABLE);
     type: bool;
     bit: 0;
     def_value: 0;
    }
  }
//PrototypeDisable
	param {
    param_PrototypeDisable {
     name: string(STR_PARAM_NAME_PROTOTYPEDISABLE);
     desc: string(STR_PARAM_DESC_PROTOTYPEDISABLE);
     type: bool;
     bit: 0;
     def_value: 0;
    }
  }
//ProposalDisable
	param {
    param_ProposalDisable {
     name: string(STR_PARAM_NAME_PROPOSALDISABLE);
     desc: string(STR_PARAM_DESC_PROPOSALDISABLE);
     type: bool;
     bit: 0;
     def_value: 0;
    }
  }
//FictionalDisable
	param {
    param_FictionalDisable {
     name: string(STR_PARAM_NAME_FICTIONALDISABLE);
     desc: string(STR_PARAM_DESC_FICTIONALDISABLE);
     type: bool;
     bit: 0;
     def_value: 0;
    }
    }
	}
	
//Carry Capacity Variables
if (param_freight_capacities == 0) {
    param_freight_capacity_mod = 0;
}

if (param_freight_capacities == 1) {
    param_freight_capacity_mod = 2;
}

// extra nml constants for Polar Fox 2024 cargo class names that substitute legacy NML class names
const CC_OPEN_BULK = 4; // remaps legacy NML class: CC_BULK
const CC_COVERED_BULK = 9; // remaps legacy NML class: CC_COVERED
const CC_POWDER_BULK = 11; // remaps legacy NML class: CC_POWDERIZED
const CC_LIQUID_BULK = 6; // remaps legacy NML class: CC_LIQUID
const CC_GAS_BULK = 8; // remaps legacy NML class: CC_HAZARDOUS
const CC_FLATBED = 10; // remaps legacy NML class: CC_OVERSIZED
const CC_WEIRD = 12; // remaps legacy NML class: CC_NON_POURABLE

railtypetable {
    RAIL, SAA3: [ MTRO, SBA3, SCA3, SDA3, "3RDR", "3RDC", MTRO, ELRL], ELRL, IHBA: [SGAA, SGAE, ELRL], TR_UNIVERSAL: [_AAE, RAIL],
}

cargotable {
	//DEFAULT
    PASS, COAL, MAIL, OIL_, LVST, GOOD, GRAI, WOOD, IORE, STEL, VALU, PAPR, WHEA, FOOD, GOLD, RUBR, FRUT, MAIZ, CORE, WATR, DIAM, 
	//TOYLAND
	SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, 
	//ECS
	AORE, BRCK, BDMT, CERA, CERE, CMNT, DYES, FERT, FICR, FISH, GLAS, LIME, OLSD, PETR, PLAS, POTA, RFPR, SAND, SULP, TOUR, VEHI, WDPR, WOOL, 
	//FIRS3, XIS
	METL, BEER, CLAY, COPR, ENSP, FMSP, GRVL, MILK, MNSP, PHOS, RCYC, SCMT, SGBT, SGCN, JAVA, CASS, NUTS, 
	EOIL, ACID, CHLO, ZINC, IRON, SASH, SALT, QLME, SLAG, MNO2, NITR, COKE, BEAN, PORE, PEAT, BOOM, KAOL, VPTS, VBOD, POWR, PIPE, 
	//FIRS 4
	CBLK, CSTI, CTAR, FECR, TYRE, COAT, LYE_, NH3_, O2__, SOAP, STAL, STCB, STSE, STSH, STST, STWR, VENG, 
	C2H4, HYAC, MEOH, NAPH, PHAC, C3H6, SUAC, TEXT, TIN_, TINP, UREA, 
	//AXIS
	ALO_, ALUM, COCO, H2__, NHNO, PPAR, ENUM, ACET, BIOM, RAMT,
	//FIRS 5
	CCPR, CRAN, FOCA, HWAR, LFEQ, N7__, PPWK, PUMP, RBAR, STBR, STPP, STTP, SWRP, TYCO, WELD, 
	//OTIS
	FRVG, URAN, BAKE, CHSE, ELTR, FUEL, FURN, MEAT, MPTS, NKOR, OTI1, OTI2, OYST, PCL_, SEED, SESP, TWOD, TATO, 
	//ITI, IotC
	WDCH, SCPR, WSTE, OILI, OILD, CIGR, TBCO, COBL, NICK, MOLS, 
	//MISC
	NUKF, NUKW, NWST, YETI, YETY
	}

//Basecost Paramater Variables
basecost {
 PR_BUILD_VEHICLE_TRAIN: 1 + param_purchase_cost - 4;
 PR_RUNNING_TRAIN_ELECTRIC: 3 + param_running_cost - 4;
 PR_RUNNING_TRAIN_DIESEL: 3 + param_running_cost - 4;
}

// Fix depot view
traininfo_y_offset = 2;
train_width_32_px = 1;


// Purchase Sprite
template template_purchase(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -60, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_4(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -31, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_5(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -33, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_6(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -35, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_7(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -37, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_8(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -39, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_44(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -39, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_55(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -43, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_66(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -47, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_77(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -51, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_77mu(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -37, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_88(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -55, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_88mu(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -41, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_88xl(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -55, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

// 4 Template
template template_4(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        29,        -3,            -24]
    [ x+9,      y,        22,        20,        -8,        -15]
    [ x+32,     y,        33,        16,        0,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        29,        -3,            -16]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -12,        -15]
}

template template_4_r(x, y) { //WIP
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x+89,     y,        8,        29,        -3,            -23]
    [ x+98,     y,        22,        20,        -8,        -15]
    [ x+121,    y,        33,        16,        0,        -12]
    [ x+155,    y,        22,        20,        -4,            -11]

    [ x,        y,        8,        29,        -3,            -16]
    [ x+9,      y,        22,        20,        -16,        -11]
    [ x+32,     y,        33,        16,        -16,        -12]
    [ x+66,     y,        22,        20,        -12,        -15]
}

// 5 Template
template template_5(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        29,        -3,            -22]
    [ x+9,      y,        22,        20,        -10,        -14]
    [ x+32,     y,        33,        16,        -4,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        29,        -3,            -16]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -10,        -14]
}

template template_5_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        29,        -3,            -22]
    [ x+9,      y,        22,        20,        -10,        -14]
    [ x+32,     y,        33,        16,        -4,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        29,        -3,            -16]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -10,        -14]
}

template template_5_repeat(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        29,        -3,            -22]
    [ x+9,      y,        22,        20,        -10,        -14]
    [ x+32,     y,        33,        16,        -4,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x,        y,        8,        29,        -3,            -16]
    [ x+9,      y,        22,        20,        -16,        -11]
    [ x+32,     y,        33,        16,        -16,        -12]
    [ x+66,     y,        22,        20,        -10,        -14]
}

// 6 Template
template template_6(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        29,        -3,            -20, ANIM]
    [ x+9,      y,        22,        20,        -12,        -13, ANIM]
    [ x+32,     y,        33,        16,        -8,        -12, ANIM]
    [ x+66,     y,        22,        20,        -4,            -11, ANIM]

    [ x+89,     y,        8,        29,        -3,            -16, ANIM]
    [ x+98,     y,        22,        20,        -16,        -11, ANIM]
    [ x+121,    y,        33,        16,        -16,        -12, ANIM]
    [ x+155,    y,        22,        20,        -8,        -13, ANIM]
}

template template_6_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x+89,     y,        8,        24,        -3,            -20, ANIM]
    [ x+98,     y,        22,        20,        -12,        -13, ANIM]
    [ x+121,    y,        33,        16,        -8,        -12, ANIM]
    [ x+155,    y,        22,        20,        -4,        -11, ANIM]

    [ x,        y,        8,        24,        -3,            -16, ANIM]
    [ x+9,      y,        22,        20,        -16,        -11, ANIM]
    [ x+32,     y,        33,        16,        -16,        -12, ANIM]
    [ x+66,     y,        22,        20,        -8,            -13, ANIM]
}

template template_6_repeat(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        29,        -3,            -20, ANIM]
    [ x+9,      y,        22,        20,        -12,        -13, ANIM]
    [ x+32,     y,        33,        16,        -8,        -12, ANIM]
    [ x+66,     y,        22,        20,        -4,            -11, ANIM]

    [ x,     y,        8,        29,        -3,            -16, ANIM]
    [ x+9,     y,        22,        20,        -16,        -11, ANIM]
    [ x+32,    y,        33,        16,        -16,        -12, ANIM]
    [ x+66,    y,        22,        20,        -8,        -13, ANIM]
}

//7 Template
template template_7(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        29,        -3,            -18, ANIM]
    [ x+9,      y,        22,        20,        -14,        -12, ANIM]
    [ x+32,     y,        33,        16,        -12,        -12, ANIM]
    [ x+66,     y,        22,        20,        -4,            -11, ANIM]

    [ x+89,     y,        8,        29,        -3,            -15, ANIM]
    [ x+98,     y,        22,        20,        -16,        -11, ANIM]
    [ x+121,    y,        33,        16,        -16,        -12, ANIM]
    [ x+155,    y,        22,        20,        -6,        -12, ANIM]
}

//7 Template Reversed
template template_7_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x+89 , y, 8 , 29,  -3, -18, ANIM]
    [ x+98 , y, 22, 20, -14, -12, ANIM]
    [ x+121, y, 33, 16, -12, -12, ANIM]
    [ x+155, y, 22, 20,  -4, -11, ANIM]

    [ x    , y, 8 , 29,  -3, -15, ANIM]
    [ x+9  , y, 22, 20, -16, -11, ANIM]
    [ x+32 , y, 33, 16, -16, -12, ANIM]
    [ x+66 , y, 22, 20,  -6, -12, ANIM]
}

//7 Template Reversed Alt
template template_7_alt_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        29,        -3,            -15, ANIM]
    [ x+9,      y,        22,        20,        -16,        -11, ANIM]
    [ x+32,     y,        33,        16,        -16,        -12, ANIM]
    [ x+66,     y,        22,        20,        -6,            -12, ANIM]

    [ x+89,     y,        8,        29,        -3,            -16, ANIM]
    [ x+98,     y,        22,        20,        -14,        -12, ANIM]
    [ x+121,    y,        33,        16,        -12,        -12, ANIM]
    [ x+155,    y,        22,        20,        -4,        -11, ANIM]
}

// 8 Template
template template_8(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        29,        -3,            -16, ANIM]
    [ x+9,      y,        22,        20,        -16,        -11, ANIM]
    [ x+32,     y,        33,        16,        -16,        -12, ANIM]
    [ x+66,     y,        22,        20,        -4,            -11, ANIM]

    [ x+89,     y,        8,        29,        -3,            -16, ANIM]
    [ x+98,     y,        22,        20,        -16,        -11, ANIM]
    [ x+121,    y,        33,        16,        -16,        -12, ANIM]
    [ x+155,    y,        22,        20,        -4,        -11, ANIM]
}

template template_8_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up

    [ x+89,     y,        8,        29,        -3,            -16, ANIM]
    [ x+98,     y,        22,        20,        -16,        -11, ANIM]
    [ x+121,    y,        33,        16,        -16,        -12, ANIM]
    [ x+155,    y,        22,        20,        -4,        -11, ANIM]

    [ x,        y,        8,        29,        -3,            -16, ANIM]
    [ x+9,      y,        22,        20,        -16,        -11, ANIM]
    [ x+32,     y,        33,        16,        -16,        -12, ANIM]
    [ x+66,     y,        22,        20,        -4,            -11, ANIM]
}

template template_8_repeat(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        29,        -3,            -16, ANIM]
    [ x+9,      y,        22,        20,        -16,        -11, ANIM]
    [ x+32,     y,        33,        16,        -16,        -12, ANIM]
    [ x+66,     y,        22,        20,        -4,            -11, ANIM]

    [ x,        y,        8,        29,        -3,            -16, ANIM]
    [ x+9,      y,        22,        20,        -16,        -11, ANIM]
    [ x+32,     y,        33,        16,        -16,        -12, ANIM]
    [ x+66,     y,        22,        20,        -4,            -11, ANIM]
}

//BULK  Recolour sprites for cargo

recolour_bulk = reserve_sprites(27);

replace(recolour_bulk) {

//Fallback 0
    recolour_sprite {
        0xE5: 0x90;
        0xE8: 0x91;
        0xE9: 0x92;
        0xEA: 0x93;
        0xEB: 0x94;
        0xEC: 0x95;
        0xED: 0x96;
        0xEE: 0x97;
//fallback piece
        0x88: 0x06;
        0x89: 0x07;
        0x8A: 0x08;
        0x8B: 0x09;
        0x8C: 0x0A;
        0x8D: 0x0B;
        0x8E: 0x0C;
        0x8F: 0x0D;
    }
//grain 1
    recolour_sprite {
        0xE5: 0x3F;
        0xE8: 0x40;
        0xE9: 0x41;
        0xEA: 0x42;
        0xEB: 0x43;
        0xEC: 0x33;
        0xED: 0x44;
        0xEE: 0x34;
    }
//iore 2
	recolour_sprite {
        0xE5: 0x46;
        0xE8: 0x47;
        0xE9: 0x48;
        0xEA: 0x49;
        0xEB: 0x4A;
        0xEC: 0x4B;
        0xED: 0x4C;
        0xEE: 0x4D;
    }
//sulp 3
    recolour_sprite {
        0xE5: 0x40;
        0xE8: 0x41;
        0xE9: 0x57;
        0xEA: 0x5E;
        0xEB: 0x42;
        0xEC: 0x32;
        0xED: 0x5F;
        0xEE: 0x34;
    }
//sand 4
    recolour_sprite {
        0xE5: 0x6F;
        0xE8: 0x3A;
        0xE9: 0x1E;
        0xEA: 0x3B;
        0xEB: 0x26;
        0xEC: 0x1F;
        0xED: 0x27;
        0xEE: 0xA8;
    }
//bauxite 5
    recolour_sprite {
        0xE5: 0x48;
        0xE8: 0x2B;
        0xE9: 0x4A;
        0xEA: 0x2C;
        0xEB: 0xA2;
        0xEC: 0x4B;
        0xED: 0x4C;
        0xEE: 0x75;
    }
//copper ore 6
    recolour_sprite {
        0xE5: 0x18;
        0xE8: 0x19;
        0xE9: 0x36;
        0xEA: 0x1A;
        0xEB: 0x37;
        0xEC: 0x38;
        0xED: 0x39;
        0xEE: 0x1D;
    }
//fertiliser 7
    recolour_sprite {
        0xE5: 0x69;
        0xE8: 0x35;
        0xE9: 0x6B;
        0xEA: 0x6C;
        0xEB: 0x6D;
        0xEC: 0x6E;
        0xED: 0x6F;
        0xEE: 0x3A;
    }
//clay 8
    recolour_sprite {
        0xE5: 0x22;
        0xE8: 0x22;
        0xE9: 0x6D;
        0xEA: 0x4C;
        0xEB: 0x75;
        0xEC: 0x76;
        0xED: 0x4F;
        0xEE: 0x26;
    }
//oil seeds 9
    recolour_sprite {
        0xE5: 0x22;
        0xE8: 0x6D;
        0xE9: 0x38;
        0xEA: 0x5C;
        0xEB: 0x6F;
        0xEC: 0x5E;
        0xED: 0x3B;
        0xEE: 0x26;
    }
//limestone 10
    recolour_sprite {
        0xE5: 0x08;
        0xE8: 0x0A;
        0xE9: 0x1E;
        0xEA: 0x0B;
        0xEB: 0x3B;
        0xEC: 0x0C;
        0xED: 0x0D;
        0xEE: 0x0E;
    }
//potash 11
    recolour_sprite {
        0xE5: 0x16;
        0xE8: 0x17;
        0xE9: 0x0D;
        0xEA: 0x87;
        0xEB: 0x0E;
        0xEC: 0xD2;
        0xED: 0x0F;
        0xEE: 0x0F;
    }
//gravel 12
    recolour_sprite {
        0xE5: 0x07;
        0xE8: 0x08;
        0xE9: 0x09;
        0xEA: 0x0A;
        0xEB: 0x0B;
        0xEC: 0x0C;
        0xED: 0x0D;
        0xEE: 0x0E;
    //piece	
        0x88: 0x07;
        0x89: 0x08;
        0x8A: 0x09;
        0x8B: 0x0A;
        0x8C: 0x0B;
        0x8D: 0x0C;
        0x8E: 0x0D;
        0x8F: 0x0E;
    }
//coal 13
    recolour_sprite {
        0xE5: 0x01;
        0xE8: 0x01;
        0xE9: 0x02;
        0xEA: 0x02;
        0xEB: 0x03;
        0xEC: 0x03;
        0xED: 0x04;
        0xEE: 0x04;
    }
//fruit 14
    recolour_sprite {
        0xE5: 0x03;
        0xE8: 0x04;
        0xE9: 0x1D;
        0xEA: 0x40;
        0xEB: 0xC2;
        0xEC: 0x42;
        0xED: 0x5F;
        0xEE: 0x43;
    }
//scrap 15
    recolour_sprite {
        0xE5: 0x02;
        0xE8: 0x03;
        0xE9: 0x7B;
        0xEA: 0x11;
        0xEB: 0x13;
        0xEC: 0x4C;
        0xED: 0x16;
        0xEE: 0x17;
    }
//sugar beet 16
    recolour_sprite {
        0xE5: 0x36;
        0xE8: 0x69;
        0xE9: 0x5C;
        0xEA: 0x6D;
        0xEB: 0x3B;
        0xEC: 0x1A;
        0xED: 0x6C;
        0xEE: 0x35;
    }
//sugar cane 17
    recolour_sprite {
        0xE5: 0x60;
        0xE8: 0x69;
        0xE9: 0x55;
        0xEA: 0x53;
        0xEB: 0x51;
        0xEC: 0x59;
        0xED: 0x50;
        0xEE: 0x40;
    }
//coffee 18
    recolour_sprite {
        0xE5: 0x68;
        0xE8: 0x6A;
        0xE9: 0x60;
        0xEA: 0x69;
        0xEB: 0x46;
        0xEC: 0x5C;
        0xED: 0x3C;
        0xEE: 0x47;
    }
//waste 19
    recolour_sprite {
        0xE5: 0x02;
        0xE8: 0x03;
        0xE9: 0x59;
        0xEA: 0x35;
        0xEB: 0x37;
        0xEC: 0x5C;
        0xED: 0x16;
        0xEE: 0x1E;
    }
//building mat 20
    recolour_sprite {
        0xE5: 0x68;
        0xE8: 0x69;
        0xE9: 0x6A;
        0xEA: 0x6B;
        0xEB: 0x6C;
        0xEC: 0x6D;
        0xED: 0x6E;
        0xEE: 0x6F;
	//piece	
        0x88: 0x72;
        0x89: 0x73;
        0x8A: 0x74;
        0x8B: 0x75;
        0x8C: 0x76;
        0x8D: 0x77;
        0x8E: 0x78;
        0x8F: 0x79;
    }
//fibre crops 21
    recolour_sprite {
        0xE5: 0x68;
        0xE8: 0x35;
        0xE9: 0x36;
        0xEA: 0x37;
        0xEB: 0x38;
        0xEC: 0x39;
        0xED: 0x3A;
        0xEE: 0x3B;
	//piece	
        0x88: 0x08;
        0x89: 0x09;
        0x8A: 0x0A;
        0x8B: 0x0B;
        0x8C: 0x0C;
        0x8D: 0x0D;
        0x8E: 0x0E;
        0x8F: 0x0F;

    }
//slag 22
    recolour_sprite {
        0xE5: 0x01;
        0xE8: 0x02;
        0xE9: 0x02;
        0xEA: 0x03;
        0xEB: 0x03;
        0xEC: 0x04;
        0xED: 0xE9;
        0xEE: 0xED;
    }
//phosphate 23
    recolour_sprite {
        0xE5: 0x6F;
        0xE8: 0x3A;
        0xE9: 0x84;
        0xEA: 0x3B;
        0xEB: 0x85;
        0xEC: 0x1F;
        0xED: 0x86;
        0xEE: 0xA8;
    }
//salt 24
    recolour_sprite {
        0xE5: 0x0A;
        0xE8: 0x0A;
        0xE9: 0x0B;
        0xEA: 0x0C;
        0xEB: 0x0D;
        0xEC: 0x0E;
        0xED: 0x0F;
        0xEE: 0x0F;
    }
//uranium 25
    recolour_sprite {
        0xE5: 0x0A;
        0xE8: 0xCE;
        0xE9: 0xCF;
        0xEA: 0xD0;
        0xEB: 0xD1;
        0xEC: 0x5E;
        0xED: 0x5F;
        0xEE: 0x67;
    }
	
//kaol/lithium 26
    recolour_sprite {
        0xE5: 0x0B;
        0xE8: 0x0C;
        0xE9: 0x9E;
        0xEA: 0x0D;
        0xEB: 0x9F;
        0xEC: 0xA0;
        0xED: 0x0E;
        0xEE: 0xA1;
    }
}


//PIECE GOODS  Recolour sprites for cargo

recolour_piece = reserve_sprites(10);

replace(recolour_piece) {

//mid grey 0
    recolour_sprite {
        0x88: 0x06;
        0x89: 0x07;
        0x8A: 0x08;
        0x8B: 0x09;
        0x8C: 0x0A;
        0x8D: 0x0B;
        0x8E: 0x0C;
        0x8F: 0x0D;
    }
//light grey 1 
    recolour_sprite {
        0x88: 0x08;
        0x89: 0x09;
        0x8A: 0x0A;
        0x8B: 0x0B;
        0x8C: 0x0C;
        0x8D: 0x0D;
        0x8E: 0x0E;
        0x8F: 0x0F;
    }
//dark grey 2 
    recolour_sprite {
        0x88: 0x03;
        0x89: 0x04;
        0x8A: 0x05;
        0x8B: 0x06;
        0x8C: 0x07;
        0x8D: 0x08;
        0x8E: 0x09;
        0x8F: 0x0A;
    }
//bluish grey 3
    recolour_sprite {
        0x88: 0x10;
        0x89: 0x11;
        0x8A: 0x12;
        0x8B: 0x13;
        0x8C: 0x14;
        0x8D: 0x15;
        0x8E: 0x16;
        0x8F: 0x17;
    }
//copper 4
    recolour_sprite {
        0x88: 0x72;
        0x89: 0x73;
        0x8A: 0x74;
        0x8B: 0x75;
        0x8C: 0x76;
        0x8D: 0x77;
        0x8E: 0x78;
        0x8F: 0x79;
    }
//light blue 5
    recolour_sprite {
        0x88: 0x9A;
        0x89: 0x9B;
        0x8A: 0x9C;
        0x8B: 0x9D;
        0x8C: 0x9E;
        0x8D: 0x9F;
        0x8E: 0xA0;
        0x8F: 0xA1;
    }
//light green 6
    recolour_sprite {
        0x88: 0x60;
        0x89: 0x61;
        0x8A: 0x62;
        0x8B: 0x63;
        0x8C: 0x64;
        0x8D: 0x65;
        0x8E: 0x66;
        0x8F: 0x67;
    }
//reddish brown 7
    recolour_sprite {
        0x88: 0x46;
        0x89: 0x47;
        0x8A: 0x48;
        0x8B: 0x49;
        0x8C: 0x4A;
        0x8D: 0x4B;
        0x8E: 0x4C;
        0x8F: 0x4D;
    }
//wood brown 8
    recolour_sprite {
        0x88: 0x68;
        0x89: 0x69;
        0x8A: 0x6A;
        0x8B: 0x6B;
        0x8C: 0x6C;
        0x8D: 0x6D;
        0x8E: 0x6E;
        0x8F: 0x6F;
	//wood as bulk		
        0xE5: 0x68;
        0xE8: 0x69;
        0xE9: 0x6A;
        0xEA: 0x6B;
        0xEB: 0x6C;
        0xEC: 0x6D;
        0xED: 0x6E;
        0xEE: 0x6F;
    }
 	
//cream 9
    recolour_sprite {
        0x88: 0x20;
        0x89: 0x21;
        0x8A: 0x22;
        0x8B: 0x23;
        0x8C: 0x24;
        0x8D: 0x25;
        0x8E: 0x26;
        0x8F: 0x27;
    }
}

/*

* GENERIC RECOLOUR CALLBACK 

*/

//todo add more recolours



switch(FEAT_TRAINS, SELF, switch_piece_recolour, cargo_type_in_veh) {
//PIECE
	STEL: return recolour_piece +3;
	IRON: return recolour_piece +7;
	METL: return recolour_piece ;
    ALUM: return recolour_piece ;
	COPR: return recolour_piece +4;
	ZINC: return recolour_piece +5;
    RAMT: return recolour_piece +5;
	NICK: return recolour_piece +6;
	ENSP: return recolour_piece +5;
	FMSP: return recolour_piece +6;
	MNSP: return recolour_piece +1;
	VPTS: return recolour_piece +2;
	PIPE: return recolour_piece +3;
	WDPR: return recolour_piece +9;

	WOOL: return recolour_piece +1;
	GLAS: return recolour_piece +5;
//	BDMT: return recolour_piece +4;
	BRCK: return recolour_piece +4;
	GOOD: return recolour_piece +6;
	PAPR: return recolour_piece +1;
	WOOD: return recolour_piece +8;
	
	STST: return recolour_piece +3;
	STSE: return recolour_piece ;
	STSH: return recolour_piece ;
	STWR: return recolour_piece +2;
	STAL: return recolour_piece +1;
	TYRE: return recolour_piece +2;
	STCB: return recolour_piece +2;
	CSTI: return recolour_piece +7;
	
	TWOD: return recolour_piece +8;
	SESP: return recolour_piece +5;
	MPTS: return recolour_piece +2;
	FURN: return recolour_piece +9;
	POWR: return recolour_piece +2;
	TEXT: return recolour_piece +9;
	URAN: return recolour_piece +6;
    COBL: return recolour_piece +5;

//FAKE BULK
	BDMT: return recolour_bulk +20;
	FICR: return recolour_bulk +21;

	SCMT: return recolour_bulk +15;
	RCYC: return recolour_bulk +19;
	WSTE: return recolour_bulk +19;
	
    SULP: return recolour_bulk +3;
	SEED: return recolour_bulk +9;
    FERT: return recolour_bulk +7;
	SASH: return recolour_bulk +10;
	TATO: return recolour_bulk +16;
	
    FRUT: return recolour_bulk +14;
    FRVG: return recolour_bulk +14;

    CMNT: return recolour_bulk +12;
    CBLK: return recolour_bulk +13;
    ALO_: return recolour_bulk +12;

    SGCN: return recolour_bulk +17;

//FALLBACK
    recolour_bulk;    
}

switch(FEAT_TRAINS, SELF, switch_bulk_recolour, cargo_type_in_veh) {
	GRAI: return recolour_bulk +1;
	CERE: return recolour_bulk +1;
	MAIZ: return recolour_bulk +1;	
	WHEA: return recolour_bulk +1;
	
	IORE: return recolour_bulk +2;
	PORE: return recolour_bulk +2;

    SULP: return recolour_bulk +3;

    SAND: return recolour_bulk +4;
	NITR: return recolour_bulk +4;

    AORE: return recolour_bulk +5;

	CORE: return recolour_bulk +6;
	NKOR: return recolour_bulk +6;

    FERT: return recolour_bulk +7;
	MNO2: return recolour_bulk +7;
	TOFF: return recolour_bulk +7;
	
	CLAY: return recolour_bulk +8;

    OLSD: return recolour_bulk +9;
	BEAN: return recolour_bulk +9;
	SEED: return recolour_bulk +9;
	
    LIME: return recolour_bulk +10;
	SASH: return recolour_bulk +10;

    POTA: return recolour_bulk +11;
	QLME: return recolour_bulk +11;

    GRVL: return recolour_bulk +12;
    FECR: return recolour_bulk +12;
	CMNT: return recolour_bulk +12;
    ALO_: return recolour_bulk +12;

    COAL: return recolour_bulk +13;
	COKE: return recolour_bulk +13;
	
    FRUT: return recolour_bulk +14;
    FRVG: return recolour_bulk +14;
	
    SCMT: return recolour_bulk +15;	

    SGBT: return recolour_bulk +16;
	CASS: return recolour_bulk +16;
	TATO: return recolour_bulk +16;
	
    SGCN: return recolour_bulk +17;
	TWOD: return recolour_bulk +17;
	
    JAVA: return recolour_bulk +18;	
	PEAT: return recolour_bulk +18;
	BIOM: return recolour_bulk +18;
	NUTS: return recolour_bulk +18;
	
	RCYC: return recolour_bulk +19;
	WSTE: return recolour_bulk +19;
	
	BDMT: return recolour_bulk +20;
	WOOD: return recolour_bulk +20;
    WDCH: return recolour_bulk +20;
	
	FICR: return recolour_bulk +21;
	
	SLAG: return recolour_bulk +22;
	
	PHOS: return recolour_bulk +23;

	SALT: return recolour_bulk +24;
	BAKE: return recolour_bulk +24;
	SUGR: return recolour_bulk +24;
	
	URAN: return recolour_bulk +25;
	
	KAOL: return recolour_bulk +26;


	

//FALLBACK BLUE
    recolour_bulk; //blue
}


switch(FEAT_TRAINS, SELF, switch_generic_recolour, cargo_classes) {
	bitmask(CC_BULK): switch_bulk_recolour;
	bitmask(CC_BULK, CC_COVERED): switch_bulk_recolour;

	switch_piece_recolour;
	
}

spriteset(spriteset_5_Old_EOTD,   "gfx/5_Old_EOTD.png") {template_5(7, 39)}
spriteset(spriteset_5_Old_EOTD_r,   "gfx/5_Old_EOTD.png") {template_5(7, 69)}

spriteset(spriteset_6_Old_EOTD,   "gfx/6_Old_EOTD.png") {template_6(7, 39)}
spriteset(spriteset_6_Old_EOTD_r,   "gfx/6_Old_EOTD.png") {template_6(7, 69)}

spriteset(spriteset_8_Modern_EOTD,   "gfx/Gen5_Boxcar_EOTD.png") {template_8(7, 39)}
spriteset(spriteset_8_Modern_EOTD_r,   "gfx/Gen5_Boxcar_EOTD.png") {template_8_r(7, 39)}

//Gen2_Boxcar_Base
spriteset(spriteset_Gen2_Boxcar_Purchase,   "gfx/Gen2_Boxcar_Base0.png") {template_purchase_5(7, 21)}

spriteset(spriteset_Gen2_Boxcar_Base0,   "gfx/Gen2_Boxcar_Base0.png") {template_5_repeat(7, 39)}
spriteset(spriteset_Gen2_Boxcar_Base1,   "gfx/Gen2_Boxcar_Base1.png") {template_5_repeat(7, 39)}

 random_switch(FEAT_TRAINS, SELF, switch_Gen2_Boxcar_Random){
    1 : spriteset_Gen2_Boxcar_Base0;
	1 : spriteset_Gen2_Boxcar_Base1;
}

switch (FEAT_TRAINS, SELF, switch_Gen2_Boxcar_SpriteStack1, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: switch_Gen2_Boxcar_Random;
    1: spriteset_5_Old_EOTD;
}

switch(FEAT_TRAINS, SELF, switch_Gen2_Boxcar_rearcheck1, position_in_consist_from_end){
    0 : switch_Gen2_Boxcar_SpriteStack1;
    return switch_Gen2_Boxcar_Random;
}

switch (FEAT_TRAINS, SELF, switch_Gen2_Boxcar_SpriteStack2, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: switch_Gen2_Boxcar_Random;
    1: spriteset_5_Old_EOTD_r;
}

switch(FEAT_TRAINS, SELF, switch_Gen2_Boxcar_rearcheck2, position_in_consist_from_end){
    0 : switch_Gen2_Boxcar_SpriteStack2;
    return switch_Gen2_Boxcar_Random;
}

switch(FEAT_TRAINS, SELF, switch_Gen2_Boxcar_position, vehicle_is_flipped) {
 0: switch_Gen2_Boxcar_rearcheck1;
 1: switch_Gen2_Boxcar_rearcheck2;
}


item (FEAT_TRAINS, Item_Gen2_Boxcar_Base, 21000) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:		bitmask( CC_MAIL, CC_PIECE_GOODS, CC_OPEN_BULK, CC_COVERED_BULK, CC_POWDER_BULK, CC_LIQUID_BULK, CC_GAS_BULK, CC_EXPRESS, CC_ARMOURED );
		non_refittable_cargo_classes:		bitmask(CC_PASSENGERS, CC_HAZARDOUS);
		default_cargo_type:				GOOD;
		cargo_disallow_refit:			[TOUR, LVST];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_CARGO;
        power:                            0 hp;
        dual_headed:                    0;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            5;
        cost_factor:                    80;
        running_cost_factor:            1;
        loading_speed:                    5;

//        variant_group: Item_Gen2_Boxcar_Base;
//        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_GEN2_BOXCAR);
        introduction_date:                date(1870, 1, 1);

        speed:                            45 mph;
        weight:                            14 ton;
        cargo_capacity:                    45/param_freight_capacity_mod; //Callback!!!
    }
    graphics {
    default:                             switch_Gen2_Boxcar_position;
    purchase:                            spriteset_Gen2_Boxcar_Purchase;
    additional_text: string(STR_INFO_GEN2_BOXCAR);
	cargo_capacity:                   return 45/param_freight_capacity_mod;
}
}

//Gen3_Boxcar_Base
spriteset(spriteset_Gen3_Boxcar_Purchase,   "gfx/Gen3_Boxcar_Base0.png") {template_purchase_6(7, 21)}

spriteset(spriteset_Gen3_Boxcar_Base0,   "gfx/Gen3_Boxcar_Base0.png") {template_6_repeat(7, 39)}
spriteset(spriteset_Gen3_Boxcar_Base1,   "gfx/Gen3_Boxcar_Base1.png") {template_6_repeat(7, 39)}
spriteset(spriteset_Gen3_Boxcar_Base2,   "gfx/Gen3_Boxcar_Base2.png") {template_6_repeat(7, 39)}
spriteset(spriteset_Gen3_Boxcar_Base3,   "gfx/Gen3_Boxcar_Base3.png") {template_6_repeat(7, 39)}

 random_switch(FEAT_TRAINS, SELF, switch_Gen3_Boxcar_Random){
    1 : spriteset_Gen3_Boxcar_Base0;
	1 : spriteset_Gen3_Boxcar_Base1;
	1 : spriteset_Gen3_Boxcar_Base2;
	1 : spriteset_Gen3_Boxcar_Base3;
}

switch (FEAT_TRAINS, SELF, switch_Gen3_Boxcar_SpriteStack1, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: switch_Gen3_Boxcar_Random;
    1: spriteset_6_Old_EOTD;
}

switch(FEAT_TRAINS, SELF, switch_Gen3_Boxcar_rearcheck1, position_in_consist_from_end){
    0 : switch_Gen3_Boxcar_SpriteStack1;
    return switch_Gen3_Boxcar_Random;
}

switch (FEAT_TRAINS, SELF, switch_Gen3_Boxcar_SpriteStack2, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: switch_Gen3_Boxcar_Random;
    1: spriteset_6_Old_EOTD_r;
}

switch(FEAT_TRAINS, SELF, switch_Gen3_Boxcar_rearcheck2, position_in_consist_from_end){
    0 : switch_Gen3_Boxcar_SpriteStack2;
    return switch_Gen3_Boxcar_Random;
}

switch(FEAT_TRAINS, SELF, switch_Gen3_Boxcar_position, vehicle_is_flipped) {
 0: switch_Gen3_Boxcar_rearcheck1;
 1: switch_Gen3_Boxcar_rearcheck2;
}


item (FEAT_TRAINS, Item_Gen3_Boxcar_Base, 23000) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:		bitmask( CC_MAIL, CC_PIECE_GOODS, CC_OPEN_BULK, CC_COVERED_BULK, CC_POWDER_BULK, CC_LIQUID_BULK, CC_GAS_BULK, CC_EXPRESS, CC_ARMOURED );
		non_refittable_cargo_classes:		bitmask(CC_PASSENGERS, CC_HAZARDOUS);
		default_cargo_type:				GOOD;
		cargo_disallow_refit:			[TOUR, LVST];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_CARGO;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                GOOD;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            6;
        cost_factor:                    120;
        running_cost_factor:            1;
        loading_speed:                    5;

//        variant_group: Item_Gen3_Boxcar_Base;
//        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_GEN3_BOXCAR);
        introduction_date:                date(1895, 1, 1);

        speed:                            70 mph;
        weight:                            16 ton;
        cargo_capacity:                    50/param_freight_capacity_mod; //Callback!!!
    }
    graphics {
    default:                             switch_Gen3_Boxcar_position;
    purchase:                            spriteset_Gen3_Boxcar_Purchase;
    additional_text: string(STR_INFO_GEN3_BOXCAR);
	cargo_capacity:                   return 50/param_freight_capacity_mod;
}
}

//Gen3_Reefer_Base
spriteset(spriteset_Gen3_Reefer_Purchase,   "gfx/Gen3_Reefer_Base0.png") {template_purchase_6(7, 21)}

spriteset(spriteset_Gen3_Reefer_Base0,   "gfx/Gen3_Reefer_Base0.png") {template_6_repeat(7, 39)}
spriteset(spriteset_Gen3_Reefer_Base1,   "gfx/Gen3_Reefer_Base1.png") {template_6_repeat(7, 39)}
spriteset(spriteset_Gen3_Reefer_Base2,   "gfx/Gen3_Reefer_Base2.png") {template_6_repeat(7, 39)}
spriteset(spriteset_Gen3_Reefer_Base3,   "gfx/Gen3_Reefer_Base3.png") {template_6_repeat(7, 39)}
spriteset(spriteset_Gen3_Reefer_Base4,   "gfx/Gen3_Reefer_Base4.png") {template_6_repeat(7, 39)}
spriteset(spriteset_Gen3_Reefer_Base5,   "gfx/Gen3_Reefer_Base5.png") {template_6_repeat(7, 39)}
spriteset(spriteset_Gen3_Reefer_Base6,   "gfx/Gen3_Reefer_Base6.png") {template_6_repeat(7, 39)}
spriteset(spriteset_Gen3_Reefer_Base7,   "gfx/Gen3_Reefer_Base7.png") {template_6_repeat(7, 39)}
spriteset(spriteset_Gen3_Reefer_Base8,   "gfx/Gen3_Reefer_Base7.png") {template_6_repeat(7, 39)}

 random_switch(FEAT_TRAINS, SELF, switch_Gen3_Reefer_Random, bitmask(TRIGGER_VEHICLE_NEW_LOAD)){
    1 : spriteset_Gen3_Reefer_Base0;
	1 : spriteset_Gen3_Reefer_Base1;
	1 : spriteset_Gen3_Reefer_Base2;
	1 : spriteset_Gen3_Reefer_Base3;
	1 : spriteset_Gen3_Reefer_Base4;
	1 : spriteset_Gen3_Reefer_Base5;
	1 : spriteset_Gen3_Reefer_Base6;
	1 : spriteset_Gen3_Reefer_Base7;
	1 : spriteset_Gen3_Reefer_Base8;
}

switch (FEAT_TRAINS, SELF, switch_Gen3_Reefer_SpriteStack1, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: switch_Gen3_Reefer_Random;
    1: spriteset_6_Old_EOTD;
}

switch(FEAT_TRAINS, SELF, switch_Gen3_Reefer_rearcheck1, position_in_consist_from_end){
    0 : switch_Gen3_Reefer_SpriteStack1;
    return switch_Gen3_Reefer_Random;
}

switch (FEAT_TRAINS, SELF, switch_Gen3_Reefer_SpriteStack2, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: switch_Gen3_Reefer_Random;
    1: spriteset_6_Old_EOTD_r;
}

switch(FEAT_TRAINS, SELF, switch_Gen3_Reefer_rearcheck2, position_in_consist_from_end){
    0 : switch_Gen3_Reefer_SpriteStack2;
    return switch_Gen3_Reefer_Random;
}

switch(FEAT_TRAINS, SELF, switch_Gen3_Reefer_position, vehicle_is_flipped) {
 0: switch_Gen3_Reefer_rearcheck1;
 1: switch_Gen3_Reefer_rearcheck2;
}


item (FEAT_TRAINS, Item_Gen3_Reefer_Base, 23040) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:		bitmask(CC_REFRIGERATED);
		non_refittable_cargo_classes:		bitmask(CC_NON_POTABLE);
		default_cargo_type:				FOOD;
//		cargo_disallow_refit:			[TOUR, LVST];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_CARGO;
        power:                            0 hp;
        dual_headed:                    0;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            6;
        cost_factor:                    120;
        running_cost_factor:            1;
        loading_speed:                    5;

//        variant_group: Item_Gen3_Reefer_Base;
//        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_GEN3_REEFER);
        introduction_date:                date(1895, 1, 1);

        speed:                            100 mph;
        weight:                            20 ton;
        cargo_capacity:                    45/param_freight_capacity_mod;
    }
    graphics {
    default:                             switch_Gen3_Reefer_position;
    purchase:                            spriteset_Gen3_Reefer_Purchase;
    additional_text: string(STR_INFO_GEN3_REEFER);
}
}

spriteset(spriteset_Gen3_Hopper_Loadh,   "gfx/Gen3_Hopper_Load.png") {template_6_repeat(7, 39)}
spriteset(spriteset_Gen3_Hopper_Loadf,   "gfx/Gen3_Hopper_Load.png") {template_6_repeat(7, 69)}

//Gen3_Hopper_Base
spriteset(spriteset_Gen3_Hopper_Purchase,   "gfx/Gen3_Hopper_Base0.png") {template_purchase_6(7, 21)}

spriteset(spriteset_Gen3_Hopper_Base0,   "gfx/Gen3_Hopper_Base0.png") {template_6_repeat(7, 39)}
spriteset(spriteset_Gen3_Hopper_Base1,   "gfx/Gen3_Hopper_Base1.png") {template_6_repeat(7, 39)}

switch(FEAT_TRAINS, SELF, switch_Gen3_Hopper_loadcheck_COAL, cargo_count * (100 / cargo_capacity)){
	1..50	: spriteset_Gen3_Hopper_Loadh ;
	51..100	: spriteset_Gen3_Hopper_Loadf ;
}

switch (FEAT_TRAINS, SELF, switch_Gen3_Hopper_recolour_load, STORE_TEMP(switch_generic_recolour(), 0x100)) {
    return switch_Gen3_Hopper_loadcheck_COAL;
}

 random_switch(FEAT_TRAINS, SELF, switch_Gen3_Hopper_Random, bitmask(TRIGGER_VEHICLE_NEW_LOAD)){
    1 : spriteset_Gen3_Hopper_Base0;
	1 : spriteset_Gen3_Hopper_Base1;
}

switch (FEAT_TRAINS, SELF, switch_Gen3_Hopper_CargoStack1, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: switch_Gen3_Hopper_Random;
    1: switch_Gen3_Hopper_recolour_load;
}

switch (FEAT_TRAINS, SELF, switch_Gen3_Hopper_RearStack1, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: switch_Gen3_Hopper_Random;
	1: switch_Gen3_Hopper_recolour_load;
    2: spriteset_6_Old_EOTD;
}

switch(FEAT_TRAINS, SELF, switch_Gen3_Hopper_rearcheck1, position_in_consist_from_end){
    0 : switch_Gen3_Hopper_RearStack1;
    return switch_Gen3_Hopper_CargoStack1;
}

switch (FEAT_TRAINS, SELF, switch_Gen3_Hopper_CargoStack2, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: switch_Gen3_Hopper_Random;
    1: switch_Gen3_Hopper_recolour_load;
}

switch (FEAT_TRAINS, SELF, switch_Gen3_Hopper_RearStack2, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: switch_Gen3_Hopper_Random;
	1: switch_Gen3_Hopper_recolour_load;
    2: spriteset_6_Old_EOTD_r;
}

switch(FEAT_TRAINS, SELF, switch_Gen3_Hopper_rearcheck2, position_in_consist_from_end){
    0 : switch_Gen3_Hopper_RearStack2;
    return switch_Gen3_Hopper_CargoStack2;
}

switch(FEAT_TRAINS, SELF, switch_Gen3_Hopper_position, vehicle_is_flipped) {
 0: switch_Gen3_Hopper_rearcheck1;
 1: switch_Gen3_Hopper_rearcheck2;
}


item (FEAT_TRAINS, Item_Gen3_Hopper_Base, 2330) {
    property {
        climates_available:             ALL_CLIMATES;
		refittable_cargo_classes:		bitmask(CC_BULK);
		non_refittable_cargo_classes:		bitmask(CC_PASSENGERS, CC_COVERED_BULK, CC_POTABLE, CC_HAZARDOUS);
		default_cargo_type:				COAL;
		cargo_disallow_refit:			[TOUR, LVST, MAIZ, GRAI, WHEA, CERE, BEAN, CASS, SGBT, CTCD, TOFF];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_CARGO;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                GOOD;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            6;
        cost_factor:                    120;
        running_cost_factor:            1;
        loading_speed:                    5;

//        variant_group: Item_Gen3_Hopper_Base;
//        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_GEN3_HOPPER);
        introduction_date:                date(1895, 1, 1);

        speed:                            70 mph;
        weight:                            20 ton;
        cargo_capacity:                    70/param_freight_capacity_mod;
    }
    graphics {
    default:                             switch_Gen3_Hopper_position;
    purchase:                            spriteset_Gen3_Hopper_Purchase;
    additional_text: string(STR_INFO_GEN3_HOPPER);
}
}

//Gen5_Boxcar_Base
spriteset(spriteset_Gen5_Boxcar_Base_Purchase,   "gfx/Gen5_Boxcar_Liv0.png") {template_purchase_8(7, 21)}

spriteset(spriteset_Gen5_Boxcar_Base_Standard_Liv0,   "gfx/Gen5_Boxcar_Liv0.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen5_Boxcar_Base_Waffle_Liv0,   "gfx/Gen5_Boxcar_Liv0.png") {template_8_repeat(7, 69)}
spriteset(spriteset_Gen5_Boxcar_Base_Cross_Liv0,   "gfx/Gen5_Boxcar_Liv0.png") {template_8_repeat(7, 99)}

spriteset(spriteset_Gen5_Boxcar_Base_Standard_Liv1,   "gfx/Gen5_Boxcar_Liv1.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen5_Boxcar_Base_Waffle_Liv1,   "gfx/Gen5_Boxcar_Liv1.png") {template_8_repeat(7, 69)}
spriteset(spriteset_Gen5_Boxcar_Base_Cross_Liv1,   "gfx/Gen5_Boxcar_Liv1.png") {template_8_repeat(7, 99)}

spriteset(spriteset_Gen5_Boxcar_Base_Standard_Liv2,   "gfx/Gen5_Boxcar_Liv2.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen5_Boxcar_Base_Waffle_Liv2,   "gfx/Gen5_Boxcar_Liv2.png") {template_8_repeat(7, 69)}
spriteset(spriteset_Gen5_Boxcar_Base_Cross_Liv2,   "gfx/Gen5_Boxcar_Liv2.png") {template_8_repeat(7, 99)}

spriteset(spriteset_Gen5_Boxcar_Base_Standard_Liv3,   "gfx/Gen5_Boxcar_Liv3.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen5_Boxcar_Base_Waffle_Liv3,   "gfx/Gen5_Boxcar_Liv3.png") {template_8_repeat(7, 69)}
spriteset(spriteset_Gen5_Boxcar_Base_Cross_Liv3,   "gfx/Gen5_Boxcar_Liv3.png") {template_8_repeat(7, 99)}

spriteset(spriteset_Gen5_Boxcar_Base_Standard_Liv4,   "gfx/Gen5_Boxcar_Liv4.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen5_Boxcar_Base_Waffle_Liv4,   "gfx/Gen5_Boxcar_Liv4.png") {template_8_repeat(7, 69)}
spriteset(spriteset_Gen5_Boxcar_Base_Cross_Liv4,   "gfx/Gen5_Boxcar_Liv4.png") {template_8_repeat(7, 99)}

spriteset(spriteset_Gen5_Boxcar_Base_Standard_Liv5,   "gfx/Gen5_Boxcar_Liv5.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen5_Boxcar_Base_Waffle_Liv5,   "gfx/Gen5_Boxcar_Liv5.png") {template_8_repeat(7, 69)}
spriteset(spriteset_Gen5_Boxcar_Base_Cross_Liv5,   "gfx/Gen5_Boxcar_Liv5.png") {template_8_repeat(7, 99)}

spriteset(spriteset_Gen5_Boxcar_Base_Standard_Liv6,   "gfx/Gen5_Boxcar_Liv6.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen5_Boxcar_Base_Waffle_Liv6,   "gfx/Gen5_Boxcar_Liv6.png") {template_8_repeat(7, 69)}
spriteset(spriteset_Gen5_Boxcar_Base_Cross_Liv6,   "gfx/Gen5_Boxcar_Liv6.png") {template_8_repeat(7, 99)}

spriteset(spriteset_Gen5_Boxcar_Base_Standard_Liv7,   "gfx/Gen5_Boxcar_Liv7.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen5_Boxcar_Base_Waffle_Liv7,   "gfx/Gen5_Boxcar_Liv7.png") {template_8_repeat(7, 69)}
spriteset(spriteset_Gen5_Boxcar_Base_Cross_Liv7,   "gfx/Gen5_Boxcar_Liv7.png") {template_8_repeat(7, 99)}

spriteset(spriteset_Gen5_Boxcar_Base_Standard_Liv8,   "gfx/Gen5_Boxcar_Liv8.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen5_Boxcar_Base_Waffle_Liv8,   "gfx/Gen5_Boxcar_Liv8.png") {template_8_repeat(7, 69)}
spriteset(spriteset_Gen5_Boxcar_Base_Cross_Liv8,   "gfx/Gen5_Boxcar_Liv8.png") {template_8_repeat(7, 99)}

spriteset(spriteset_Gen5_Boxcar_Base_Standard_Liv9,   "gfx/Gen5_Boxcar_Liv9.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen5_Boxcar_Base_Waffle_Liv9,   "gfx/Gen5_Boxcar_Liv9.png") {template_8_repeat(7, 69)}
spriteset(spriteset_Gen5_Boxcar_Base_Cross_Liv9,   "gfx/Gen5_Boxcar_Liv9.png") {template_8_repeat(7, 99)}

spriteset(spriteset_Gen5_Boxcar_Base_Standard_Liv10,   "gfx/Gen5_Boxcar_Liv10.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen5_Boxcar_Base_Waffle_Liv10,   "gfx/Gen5_Boxcar_Liv10.png") {template_8_repeat(7, 69)}
spriteset(spriteset_Gen5_Boxcar_Base_Cross_Liv10,   "gfx/Gen5_Boxcar_Liv10.png") {template_8_repeat(7, 99)}

spriteset(spriteset_Gen5_Boxcar_Base_Standard_Liv11,   "gfx/Gen5_Boxcar_Liv11.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen5_Boxcar_Base_Waffle_Liv11,   "gfx/Gen5_Boxcar_Liv11.png") {template_8_repeat(7, 69)}
spriteset(spriteset_Gen5_Boxcar_Base_Cross_Liv11,   "gfx/Gen5_Boxcar_Liv11.png") {template_8_repeat(7, 99)}

spriteset(spriteset_Gen5_Boxcar_Base_Standard_Liv12,   "gfx/Gen5_Boxcar_Liv12.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen5_Boxcar_Base_Waffle_Liv12,   "gfx/Gen5_Boxcar_Liv12.png") {template_8_repeat(7, 69)}
spriteset(spriteset_Gen5_Boxcar_Base_Cross_Liv12,   "gfx/Gen5_Boxcar_Liv12.png") {template_8_repeat(7, 99)}

spriteset(spriteset_Gen5_Boxcar_Base_Standard_Liv13,   "gfx/Gen5_Boxcar_Liv13.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen5_Boxcar_Base_Waffle_Liv13,   "gfx/Gen5_Boxcar_Liv13.png") {template_8_repeat(7, 69)}
spriteset(spriteset_Gen5_Boxcar_Base_Cross_Liv13,   "gfx/Gen5_Boxcar_Liv13.png") {template_8_repeat(7, 99)}

spriteset(spriteset_Gen5_Boxcar_Base_Standard_Liv14,   "gfx/Gen5_Boxcar_Liv14.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen5_Boxcar_Base_Waffle_Liv14,   "gfx/Gen5_Boxcar_Liv14.png") {template_8_repeat(7, 69)}
spriteset(spriteset_Gen5_Boxcar_Base_Cross_Liv14,   "gfx/Gen5_Boxcar_Liv14.png") {template_8_repeat(7, 99)}

 random_switch(FEAT_TRAINS, SELF, switch_Gen5_Boxcar_Base_Random){
    1 : spriteset_Gen5_Boxcar_Base_Standard_Liv0;
    1 : spriteset_Gen5_Boxcar_Base_Waffle_Liv0;
	1 : spriteset_Gen5_Boxcar_Base_Cross_Liv0;
	1 : spriteset_Gen5_Boxcar_Base_Standard_Liv1;
    1 : spriteset_Gen5_Boxcar_Base_Waffle_Liv1;
	1 : spriteset_Gen5_Boxcar_Base_Cross_Liv1;
	1 : spriteset_Gen5_Boxcar_Base_Standard_Liv2;
    1 : spriteset_Gen5_Boxcar_Base_Waffle_Liv2;
	1 : spriteset_Gen5_Boxcar_Base_Cross_Liv2;
	1 : spriteset_Gen5_Boxcar_Base_Standard_Liv3;
    1 : spriteset_Gen5_Boxcar_Base_Waffle_Liv3;
	1 : spriteset_Gen5_Boxcar_Base_Cross_Liv3;
	1 : spriteset_Gen5_Boxcar_Base_Standard_Liv4;
    1 : spriteset_Gen5_Boxcar_Base_Waffle_Liv4;
	1 : spriteset_Gen5_Boxcar_Base_Cross_Liv4;
	1 : spriteset_Gen5_Boxcar_Base_Standard_Liv5;
    1 : spriteset_Gen5_Boxcar_Base_Waffle_Liv5;
	1 : spriteset_Gen5_Boxcar_Base_Cross_Liv5;
	1 : spriteset_Gen5_Boxcar_Base_Standard_Liv6;
    1 : spriteset_Gen5_Boxcar_Base_Waffle_Liv6;
	1 : spriteset_Gen5_Boxcar_Base_Cross_Liv6;
	1 : spriteset_Gen5_Boxcar_Base_Standard_Liv7;
    1 : spriteset_Gen5_Boxcar_Base_Waffle_Liv7;
	1 : spriteset_Gen5_Boxcar_Base_Cross_Liv7;
	1 : spriteset_Gen5_Boxcar_Base_Standard_Liv8;
    1 : spriteset_Gen5_Boxcar_Base_Waffle_Liv8;
	1 : spriteset_Gen5_Boxcar_Base_Cross_Liv8;
	1 : spriteset_Gen5_Boxcar_Base_Standard_Liv9;
    1 : spriteset_Gen5_Boxcar_Base_Waffle_Liv9;
	1 : spriteset_Gen5_Boxcar_Base_Cross_Liv9;
	1 : spriteset_Gen5_Boxcar_Base_Standard_Liv10;
    1 : spriteset_Gen5_Boxcar_Base_Waffle_Liv10;
	1 : spriteset_Gen5_Boxcar_Base_Cross_Liv10;
	1 : spriteset_Gen5_Boxcar_Base_Standard_Liv11;
    1 : spriteset_Gen5_Boxcar_Base_Waffle_Liv11;
	1 : spriteset_Gen5_Boxcar_Base_Cross_Liv11;
	1 : spriteset_Gen5_Boxcar_Base_Standard_Liv12;
    1 : spriteset_Gen5_Boxcar_Base_Waffle_Liv12;
	1 : spriteset_Gen5_Boxcar_Base_Cross_Liv12;
	1 : spriteset_Gen5_Boxcar_Base_Standard_Liv13;
    1 : spriteset_Gen5_Boxcar_Base_Waffle_Liv13;
	1 : spriteset_Gen5_Boxcar_Base_Cross_Liv13;
	1 : spriteset_Gen5_Boxcar_Base_Standard_Liv14;
    1 : spriteset_Gen5_Boxcar_Base_Waffle_Liv14;
	1 : spriteset_Gen5_Boxcar_Base_Cross_Liv14;
}

switch (FEAT_TRAINS, SELF, switch_Gen5_Boxcar_Base_SpriteStack1, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: switch_Gen5_Boxcar_Base_Random;
    1: spriteset_8_Modern_EOTD;
}

switch(FEAT_TRAINS, SELF, switch_Gen5_Boxcar_Base_rearcheck1, position_in_consist_from_end){
    0 : switch_Gen5_Boxcar_Base_SpriteStack1;
    return switch_Gen5_Boxcar_Base_Random;
}

switch (FEAT_TRAINS, SELF, switch_Gen5_Boxcar_Base_SpriteStack2, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: switch_Gen5_Boxcar_Base_Random;
    1: spriteset_8_Modern_EOTD_r;
}

switch(FEAT_TRAINS, SELF, switch_Gen5_Boxcar_Base_rearcheck2, position_in_consist_from_end){
    0 : switch_Gen5_Boxcar_Base_SpriteStack2;
    return switch_Gen5_Boxcar_Base_Random;
}

switch(FEAT_TRAINS, SELF, switch_Gen5_Boxcar_Base_position, vehicle_is_flipped) {
 0: switch_Gen5_Boxcar_Base_rearcheck1;
 1: switch_Gen5_Boxcar_Base_rearcheck2;
}


item (FEAT_TRAINS, Item_Gen5_Boxcar_Base, 25000) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:		bitmask( CC_MAIL, CC_PIECE_GOODS, CC_OPEN_BULK, CC_COVERED_BULK, CC_POWDER_BULK, CC_LIQUID_BULK, CC_GAS_BULK, CC_EXPRESS, CC_ARMOURED );
		non_refittable_cargo_classes:		bitmask(CC_PASSENGERS, CC_HAZARDOUS);
		default_cargo_type:				GOOD;
		cargo_disallow_refit:			[TOUR, LVST];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_CARGO;
        power:                            0 hp;
        dual_headed:                    0;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    160;
        running_cost_factor:            1;
        loading_speed:                    5;

//        variant_group: Item_Gen5_Boxcar_Base;
//        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_GEN5_BOXCAR);
        introduction_date:                date(1955, 1, 1);

        speed:                            80 mph;
        weight:                            21 ton;
        cargo_capacity:                    80/param_freight_capacity_mod; //Callback!!!
    }
    graphics {
    default:                             switch_Gen5_Boxcar_Base_position;
    purchase:                            spriteset_Gen5_Boxcar_Base_Purchase;
    additional_text: string(STR_INFO_GEN5_BOXCAR);
	cargo_capacity:                   return 80/param_freight_capacity_mod;
}
}

//Gen6_HiCube_Boxcar_Base
spriteset(spriteset_Gen6_HiCube_Boxcar_Purchase,   "gfx/Gen6_HiCube_Boxcar_Base0.png") {template_purchase_8(7, 21)}

spriteset(spriteset_Gen6_HiCube_Boxcar_Base0,   "gfx/Gen6_HiCube_Boxcar_Base0.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen6_HiCube_Boxcar_Base1,   "gfx/Gen6_HiCube_Boxcar_Base1.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen6_HiCube_Boxcar_Base2,   "gfx/Gen6_HiCube_Boxcar_Base2.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen6_HiCube_Boxcar_Base3,   "gfx/Gen6_HiCube_Boxcar_Base3.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen6_HiCube_Boxcar_Base4,   "gfx/Gen6_HiCube_Boxcar_Base4.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen6_HiCube_Boxcar_Base5,   "gfx/Gen6_HiCube_Boxcar_Base5.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen6_HiCube_Boxcar_Base6,   "gfx/Gen6_HiCube_Boxcar_Base6.png") {template_8_repeat(7, 39)}
spriteset(spriteset_Gen6_HiCube_Boxcar_Base7,   "gfx/Gen6_HiCube_Boxcar_Base7.png") {template_8_repeat(7, 39)}

 random_switch(FEAT_TRAINS, SELF, switch_Gen6_HiCube_Boxcar_Random){
    1 : spriteset_Gen6_HiCube_Boxcar_Base0;
	1 : spriteset_Gen6_HiCube_Boxcar_Base1;
	1 : spriteset_Gen6_HiCube_Boxcar_Base2;
	1 : spriteset_Gen6_HiCube_Boxcar_Base3;
	1 : spriteset_Gen6_HiCube_Boxcar_Base4;
	1 : spriteset_Gen6_HiCube_Boxcar_Base5;
	1 : spriteset_Gen6_HiCube_Boxcar_Base6;
	1 : spriteset_Gen6_HiCube_Boxcar_Base7;
}

switch (FEAT_TRAINS, SELF, switch_Gen6_HiCube_Boxcar_SpriteStack1, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: switch_Gen6_HiCube_Boxcar_Random;
    1: spriteset_8_Modern_EOTD;
}

switch(FEAT_TRAINS, SELF, switch_Gen6_HiCube_Boxcar_rearcheck1, position_in_consist_from_end){
    0 : switch_Gen6_HiCube_Boxcar_SpriteStack1;
    return switch_Gen6_HiCube_Boxcar_Random;
}

switch (FEAT_TRAINS, SELF, switch_Gen6_HiCube_Boxcar_SpriteStack2, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: switch_Gen6_HiCube_Boxcar_Random;
    1: spriteset_8_Modern_EOTD_r;
}

switch(FEAT_TRAINS, SELF, switch_Gen6_HiCube_Boxcar_rearcheck2, position_in_consist_from_end){
    0 : switch_Gen6_HiCube_Boxcar_SpriteStack2;
    return switch_Gen6_HiCube_Boxcar_Random;
}

switch(FEAT_TRAINS, SELF, switch_Gen6_HiCube_Boxcar_position, vehicle_is_flipped) {
 0: switch_Gen6_HiCube_Boxcar_rearcheck1;
 1: switch_Gen6_HiCube_Boxcar_rearcheck2;
}


item (FEAT_TRAINS, Item_Gen6_HiCube_Boxcar_Base, 26000) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:		bitmask( CC_MAIL, CC_PIECE_GOODS, CC_OPEN_BULK, CC_COVERED_BULK, CC_POWDER_BULK, CC_LIQUID_BULK, CC_GAS_BULK, CC_EXPRESS, CC_ARMOURED );
		non_refittable_cargo_classes:		bitmask(CC_PASSENGERS, CC_HAZARDOUS);
		default_cargo_type:				GOOD;
		cargo_disallow_refit:			[TOUR, LVST];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_CARGO;
        power:                            0 hp;
        dual_headed:                    0;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    180;
        running_cost_factor:            1;
        loading_speed:                    5;

//        variant_group: Item_Gen6_HiCube_Boxcar_Base;
//        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_GEN6_HICUBE_BOXCAR);
        introduction_date:                date(1990, 1, 1);

        speed:                            80 mph;
        weight:                            33 ton;
        cargo_capacity:                    100/param_freight_capacity_mod; //Callback!!!
    }
    graphics {
    default:                             switch_Gen6_HiCube_Boxcar_position;
    purchase:                            spriteset_Gen6_HiCube_Boxcar_Purchase;
    additional_text: string(STR_INFO_GEN6_HICUBE_BOXCAR);
	cargo_capacity:                   return 100/param_freight_capacity_mod;
}
}